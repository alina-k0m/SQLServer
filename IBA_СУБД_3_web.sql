----------------- SELECT --------------------
SELECT 0;
SELECT 'Hello, World!';
SELECT SYSDATETIME();

----------------- FROM ----------------------

SELECT * FROM CUSTOMERS;

SELECT ORDER_DATE,
	   CUST,
	   QTY,
	   AMOUNT 
FROM ORDERS;

SELECT ORDER_DATE AS Order_Date,
	   CUST AS Customer,
	   QTY AS Quantity,
	   AMOUNT 
FROM ORDERS;



SELECT AMOUNT 
FROM (SELECT ORDER_DATE,
	   CUST,
	   QTY,
	   AMOUNT FROM ORDERS) as t1;

----------------- WHERE ----------------------

SELECT * FROM CUSTOMERS 
WHERE CREDIT_LIMIT > 40000;

SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT>40000 AND CREDIT_LIMIT<60000;

SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT between 40000 AND 60000;

SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT > 55000 OR CUST_NUM = 2121;

--------------
SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT>40000 OR CREDIT_LIMIT<60000
	AND CREDIT_LIMIT>40000 OR CUST_NUM<2100;

SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT>40000 AND CREDIT_LIMIT<60000
	OR CREDIT_LIMIT>40000 AND CUST_NUM<2100;

-------------- BETWEEN
SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT BETWEEN 40000 and 60000;


SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT NOT BETWEEN 40000 and 60000;

-------------- IN
SELECT * FROM CUSTOMERS 
	WHERE CREDIT_LIMIT IN (25000, 40000, 45000);

-------------- IS NULL
SELECT *
  FROM SALESREPS
  WHERE MANAGER is NULL;

SELECT NAME
  FROM SALESREPS
  WHERE MANAGER <> NULL; -- ошибка!!!!

-------------- LIKE
SELECT NAME
  FROM SALESREPS
  WHERE NAME LIKE '__L%';

SELECT NAME
  FROM AMOUNTESREPS
  WHERE NAME LIKE '%h';

-------------- ORDER BY
SELECT * FROM CUSTOMERS ORDER BY CREDIT_LIMIT;

SELECT * FROM CUSTOMERS ORDER BY CREDIT_LIMIT ASC;
SELECT * FROM CUSTOMERS ORDER BY CREDIT_LIMIT DESC;

SELECT * FROM CUSTOMERS 
ORDER BY COMPANY ASC, CREDIT_LIMIT DESC;

-------------- TOP
SELECT * FROM CUSTOMERS 
ORDER BY CREDIT_LIMIT;

SELECT TOP 5 * FROM CUSTOMERS 
WHERE CREDIT_LIMIT >40000;

SELECT TOP 20 PERCENT * FROM CUSTOMERS;

SELECT TOP 7 WITH TIES * FROM CUSTOMERS 
ORDER BY CREDIT_LIMIT;

------------------------ FETCH FIRST (NEXT) ROW (ROWS)
SELECT AMOUNT
FROM   ORDERS
ORDER BY AMOUNT
OFFSET 0 ROWS
FETCH FIRST 5 ROWS ONLY;


SELECT AMOUNT
FROM   ORDERS
ORDER BY AMOUNT
OFFSET 4 ROWS 
FETCH NEXT 4 ROWS ONLY;

-------------- DISTINCT
SELECT DISTINCT CREDIT_LIMIT 
FROM CUSTOMERS WHERE CREDIT_LIMIT >40000;

-------------- GROUP BY
SELECT CREDIT_LIMIT, COUNT(COMPANY) AS Count_of_Companies
FROM CUSTOMERS 
GROUP BY CREDIT_LIMIT;

SELECT ORDER_DATE, QTY, SUM(AMOUNT) AS AMOUNT_PER_DAY_QUAN
FROM ORDERS
GROUP BY ORDER_DATE, QTY;

-------------- HAVING
SELECT ORDER_DATE, SUM(AMOUNT) AS AMOUNT_PER_DAY
FROM ORDERS
GROUP BY ORDER_DATE
HAVING SUM(AMOUNT) >10000;

SELECT ORDER_DATE, SUM(AMOUNT) AS AMOUNT_PER_DAY
FROM ORDERS
GROUP BY ORDER_DATE
HAVING  AMOUNT_PER_DAY >10000; -- ошибка!!

-----------------------------------------------------
--------------------- GROUP BY CUBE, ROLLUP
-----------------------------------------------------
CREATE TABLE tc (t_type VARCHAR(5), t_color VARCHAR(5), t_sum INT);

INSERT INTO tc (t_type, t_color, t_sum) VALUES
('Chair', 'Blue', 100);
INSERT INTO tc (t_type, t_color, t_sum) VALUES
('Chair', 'Red', 90);
INSERT INTO tc (t_type, t_color, t_sum) VALUES
('Chair', 'Green', 80);

INSERT INTO tc (t_type, t_color, t_sum) VALUES
('Table', 'Blue', 120);
INSERT INTO tc (t_type, t_color, t_sum) VALUES
('Table', 'Red', 190);
INSERT INTO tc (t_type, t_color, t_sum) VALUES
('Table', 'Green', 800);

--------------------- GROUP BY 
SELECT t_type, t_color, sum(t_sum)
FROM   tc
GROUP BY t_type, t_color;

--------------------- GROUP BY ROLLUP T_TYPE --> T_COLOR
SELECT t_type, t_color, sum(t_sum)
FROM   tc
GROUP BY ROLLUP (t_type, t_color);

--------------------- GROUP BY ROLLUP T_COLOR --> T_TYPE
SELECT t_color, t_type, sum(t_sum)
FROM   tc
GROUP BY ROLLUP (t_color, t_type);

--------------------- GROUP BY CUBE
SELECT t_color, t_type, sum(t_sum)
FROM   tc
GROUP BY cube (t_color, t_type)
ORDER BY t_color;


-------------- INTO
SELECT 
ORDER_DATE, SUM(AMOUNT) AS AMOUNT_PER_DAY
INTO T11 -- нет заранее таблицы!!!
FROM ORDERS
GROUP BY ORDER_DATE
HAVING SUM(AMOUNT) >10000;

SELECT * FROM T11;
DROP TABLE T11;


--------------------- TEMP Tables
SELECT 
ORDER_DATE, SUM(AMOUNT) AS AMOUNT_PER_DAY
INTO #T11 
FROM ORDERS
GROUP BY ORDER_DATE
HAVING SUM(AMOUNT) >10000;

SELECT * FROM #T11;
DROP TABLE #T11;

SELECT 
ORDER_DATE, SUM(AMOUNT) AS AMOUNT_PER_DAY
INTO ##T11 
FROM ORDERS
GROUP BY ORDER_DATE
HAVING SUM(AMOUNT) >10000;

SELECT * FROM ##T11;
DROP TABLE ##T11;





--------------------- JOIN Tables
SELECT 
	ORDERS.ORDER_DATE, 
	CUSTOMERS.COMPANY
FROM ORDERS INNER JOIN CUSTOMERS -- новый синтаксис
ON ORDERS.CUST=CUSTOMERS.CUST_NUM;


SELECT 
	O.ORDER_DATE, 
	C.COMPANY
FROM ORDERS O INNER JOIN CUSTOMERS C
ON O.CUST=C.CUST_NUM;

SELECT 
	ORDER_DATE, 
	COMPANY
FROM ORDERS O INNER JOIN CUSTOMERS C
ON O.CUST=C.CUST_NUM;

SELECT 
	O.ORDER_DATE, 
	C.COMPANY
FROM ORDERS O JOIN CUSTOMERS C
ON O.CUST=C.CUST_NUM;


SELECT 
	ORDERS.ORDER_DATE, 
	CUSTOMERS.COMPANY
FROM ORDERS, CUSTOMERS -- старый синтаксис
WHERE ORDERS.CUST=CUSTOMERS.CUST_NUM;

--------- OUTER JOIN
SELECT CUSTOMERS.COMPANY, ORDERS.ORDER_DATE
FROM CUSTOMERS  LEFT JOIN ORDERS -- только новый синтаксис
ON CUSTOMERS.CUST_NUM = ORDERS.CUST;

SELECT CUSTOMERS.COMPANY, ORDERS.ORDER_DATE
FROM CUSTOMERS RIGHT JOIN ORDERS
ON CUSTOMERS.CUST_NUM = ORDERS.CUST;

SELECT CUSTOMERS.COMPANY, ORDERS.ORDER_DATE
FROM CUSTOMERS  FULL OUTER JOIN ORDERS
ON CUSTOMERS.CUST_NUM = ORDERS.CUST;

--------- CROSS JOIN
SELECT CUSTOMERS.COMPANY, ORDERS.ORDER_DATE
FROM CUSTOMERS  CROSS JOIN ORDERS;

--------- Самосоединения
SELECT * FROM SALESREPS ORDER BY EMPL_NUM;

SELECT S1.NAME, S2.NAME as Manager
FROM SALESREPS s1 JOIN SALESREPS s2
ON S1.MANAGER = S2.EMPL_NUM
ORDER BY S1.EMPL_NUM;

SELECT S1.NAME, S2.NAME as Manager
FROM SALESREPS s1 LEFT JOIN SALESREPS s2
ON S1.MANAGER = S2.EMPL_NUM
ORDER BY S1.EMPL_NUM;

SELECT S1.NAME Emp1, S2.NAME as Emp2
FROM SALESREPS s1 LEFT JOIN SALESREPS s2
ON S1.HIRE_DATE = S2.HIRE_DATE
WHERE S1.EMPL_NUM <> S2.EMPL_NUM;